.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "openroad" "0" "2023/11/13" "" ""
.hy
.SH NAME
.PP
openroad - OpenROAD command-line-interface.
.SH SYNOPSIS
.PP
openroad [-help] [-version] [-no_init] [-exit] [-gui] [-threads
count|max] [-log file_name] [-metrics file_name] cmd_file
.PP
openroad [-python] cmd_file
.SH DESCRIPTION
.PP
The \f[B]openroad\f[R] command is the command-line interface for
OpenROAD, an open-source initiative for chip design and optimization.
It provides a range of options to control its behavior and execute
commands specified in the cmd_file.
.SH OPTIONS
.PP
\f[C]-help\f[R]: Display help information.
.PP
\f[C]-version\f[R]: Display version information.
.PP
\f[C]-no_init\f[R]: Skip initialization steps.
.PP
\f[C]-exit\f[R]: Exit after executing commands in cmd_file.
.PP
\f[C]-gui\f[R]: Launch the graphical user interface (GUI).
.PP
\f[C]-threads  count|max\f[R]: Specify the number of threads to use (or
use max available).
.PP
\f[C]-log file_name\f[R]: Log output to the specified file.
.PP
\f[C]-metrics file_name\f[R]: Save performance metrics to the specified
file.
.PP
\f[C]-python\f[R]: Execute the cmd_file as a Python script.
.SH ARGUMENTS
.PP
\f[C]cmd_file\f[R]: The command file containing OpenROAD commands to be
executed.
.SH EXAMPLES
.PP
\f[B]openroad -help\f[R]: Prints the help information
.PP
\f[B]openroad -version -exit\f[R]: Prints the version information, and
exits the program thereafter.
.PP
\f[B]openroad -threads max -log test.log -metrics test.metrics\f[R]:
Prints the log and metric respectively to \f[C]test.log\f[R] and
\f[C]test.metrics\f[R].
Also runs the script with maximum available number of threads.
.PP
\f[B]openroad -gui\f[R]: Launches OpenROAD GUI, which further
interactive Tcl commands can be run.
.SH TCL COMMANDS
.PP
These Tcl-based commands are callable from within the OpenROAD binary.
.IP \[bu] 2
read_lef [-tech] [-library] filename
.RS 2
.IP \[bu] 2
Read Library Exchange Format (.lef) files.
.IP \[bu] 2
tech: Technology-specific information
.IP \[bu] 2
library: .lib files
.RE
.IP \[bu] 2
read_def filename
.RS 2
.IP \[bu] 2
Read Design Exchange Format (.def) files.
.RE
.IP \[bu] 2
write_def [-version 5.8|5.7|5.6|5.5|5.4|5.3] filename
.RS 2
.IP \[bu] 2
Write Design Exchange Format (.def) files.
.IP \[bu] 2
version 5.8|5.7|5.6|5.5|5.4|5.3: Corresponding DEF version to use.
.RE
.IP \[bu] 2
read_verilog filename
.RS 2
.IP \[bu] 2
Read Verilog (.v) input file.
.RE
.IP \[bu] 2
write_verilog filename
.RS 2
.IP \[bu] 2
Write Verilog (.v) file based on current database.
.RE
.IP \[bu] 2
read_db filename
.RS 2
.IP \[bu] 2
Read OpenDB (.odb) database files.
.RE
.IP \[bu] 2
write_db filename
.RS 2
.IP \[bu] 2
Write OpenDB (.odb) database files.
.RE
.IP \[bu] 2
write_abstract_lef filename
.RS 2
.IP \[bu] 2
Write abstract Library Exchange Format (.lef) files based on current
database.
.RE
.SH ENVIRONMENT
.SH FILES
.SH SEE ALSO
.SH HISTORY
.SH BUGS
.SH COPYRIGHT
.PP
Copyright (c) 2024, The Regents of the University of California.
All rights reserved.
.SH AUTHORS
Jack Luar (TODO\[at]TODO.com).
